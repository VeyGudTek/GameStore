// <auto-generated />
using System;
using GameStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GameStore.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    [Migration("20250116031608_SeedGenres")]
    partial class SeedGenres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GameStore.Entities.Game", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("genreId")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<DateOnly>("release_date")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.HasIndex("genreId");

                    b.ToTable("games");
                });

            modelBuilder.Entity("GameStore.Entities.Genre", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("genres");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "fighting"
                        },
                        new
                        {
                            id = 2,
                            name = "sports"
                        },
                        new
                        {
                            id = 3,
                            name = "adventure"
                        },
                        new
                        {
                            id = 4,
                            name = "shooter"
                        },
                        new
                        {
                            id = 5,
                            name = "racing"
                        });
                });

            modelBuilder.Entity("GameStore.Entities.Game", b =>
                {
                    b.HasOne("GameStore.Entities.Genre", "genre")
                        .WithMany()
                        .HasForeignKey("genreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("genre");
                });
#pragma warning restore 612, 618
        }
    }
}
